name: Deploy to Cloud Run

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to (dev/staging/prod)'
        required: true
        type: string
      image_tag:
        description: 'Image tag suffix (e.g., commit SHA or version like "v1.0.0")'
        required: true
        type: string
      service_name:
        description: 'Cloud Run service name'
        required: true
        type: string
      allow_unauthenticated:
        description: 'Allow unauthenticated access'
        required: true
        type: boolean
    secrets:
      SA:
        description: 'GCP Service Account JSON'
        required: true

jobs:
  deploy:
    name: Deploy to Cloud Run (${{ inputs.environment }})
    runs-on: ubuntu-latest
    environment: gcp
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Authenticate to Google Cloud
        run: |
          echo '${{ secrets.SA }}' > ${HOME}/gcp-key.json
          gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
          gcloud config set project ${{ vars.GCP_PROJECT_ID }}
          rm ${HOME}/gcp-key.json

      - name: Deploy to Cloud Run
        run: |
          FULL_IMAGE_TAG="${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/pairreader-${{ inputs.environment }}/pairreader-${{ inputs.environment }}:${{ inputs.image_tag }}"
          gcloud run deploy ${{ inputs.service_name }} \
            --image=$FULL_IMAGE_TAG \
            --region=${{ vars.GCP_REGION }} \
            --service-account=pairreader-runtime-${{ inputs.environment }}@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            ${{ inputs.allow_unauthenticated && '--allow-unauthenticated' || '--no-allow-unauthenticated' }} \
            --memory=4Gi \
            --port=8000 \
            --set-secrets=ANTHROPIC_API_KEY=ANTHROPIC_API_KEY:latest,CHAINLIT_AUTH_SECRET=CHAINLIT_AUTH_SECRET:latest,LANGSMITH_API_KEY=LANGSMITH_API_KEY:latest \
            --quiet

      - name: Get Service URL
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ inputs.service_name }} \
            --region=${{ vars.GCP_REGION }} \
            --format='value(status.url)')
          echo "${{ inputs.environment }} service deployed at: $SERVICE_URL"
