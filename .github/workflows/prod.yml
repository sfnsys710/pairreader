name: Deploy to Production

env:
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GCP_REGION: ${{ vars.GCP_REGION }}
  GAR_REPOSITORY: "pairreader"
  GAR_BASE_IMAGE_NAME: "pairreader"
  CLOUDRUN_BASE_SERVICE_NAME: "pairreader-service"

on:
  workflow_dispatch:
    inputs:
      confirm_production:
        description: 'Type "production" to confirm deployment'
        required: true
        type: string

# Prevent concurrent deployments to production
concurrency:
  group: production-deployment
  cancel-in-progress: false

jobs:
  validate-input:
    name: Validate production confirmation
    runs-on: ubuntu-latest
    steps:
      - name: Check confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_production }}" != "production" ]; then
            echo "Error: You must type 'production' to confirm deployment"
            exit 1
          fi
          echo "Production deployment confirmed"

  extract-version:
    name: Extract versions
    runs-on: ubuntu-latest
    needs: validate-input
    outputs:
      PAIRREADER_VERSION: ${{ steps.extract-versions.outputs.PAIRREADER_VERSION }}
      TF_VERSION: ${{ steps.extract-versions.outputs.TF_VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Extract versions
        id: extract-versions
        run: |
          PAIRREADER_VERSION=$(grep -m 1 '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          TF_VERSION=$(cat infra/.terraform-version)
          echo "PAIRREADER_VERSION = $PAIRREADER_VERSION"
          echo "TF_VERSION = $TF_VERSION"
          echo "PAIRREADER_VERSION=$PAIRREADER_VERSION" >> $GITHUB_OUTPUT
          echo "TF_VERSION=$TF_VERSION" >> $GITHUB_OUTPUT

  terraform-prod:
    name: Terraform (prod)
    needs: extract-version
    uses: ./.github/workflows/terraform-workflow.yml
    with:
      environment: prod
      terraform_version: ${{ needs.extract-version.outputs.TF_VERSION }}
      project_id: ${{ vars.GCP_PROJECT_ID }}
      region: ${{ vars.GCP_REGION }}
    secrets:
      SA: ${{ secrets.SA }}

  docker-build-prod:
    name: Build and push Docker (prod)
    needs:
      - extract-version
      - terraform-prod
    uses: ./.github/workflows/docker-build.yml
    with:
      environment: prod
      image_tag: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/pairreader-prod/pairreader-prod:v${{ needs.extract-version.outputs.PAIRREADER_VERSION }}
      project_id: ${{ vars.GCP_PROJECT_ID }}
      region: ${{ vars.GCP_REGION }}
    secrets:
      SA: ${{ secrets.SA }}

  deploy-prod:
    name: Deploy to Cloud Run (prod)
    needs:
      - extract-version
      - docker-build-prod
    uses: ./.github/workflows/deploy-cloudrun.yml
    with:
      environment: prod
      image_tag: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/pairreader-prod/pairreader-prod:v${{ needs.extract-version.outputs.PAIRREADER_VERSION }}
      project_id: ${{ vars.GCP_PROJECT_ID }}
      region: ${{ vars.GCP_REGION }}
      service_name: pairreader-service-prod
      allow_unauthenticated: false
    secrets:
      SA: ${{ secrets.SA }}
